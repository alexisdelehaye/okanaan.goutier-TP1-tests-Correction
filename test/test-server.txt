process.env.NODE_ENV = 'test';

var chai = require('chai');
var chaiHttp = require('chai-http');
var mongoose = require("mongoose");

var server = require('../server/app');
var Film = require("../server/models/film");

var should = chai.should();
chai.use(chaiHttp);


describe('Films', function() {

  Film.collection.drop();

  beforeEach(function(done){
    var newFilm = new Film({
      title: 'Bat',
      year: 2000
    });
    newFilm.save(function(err) {
      done();
    });
  });
  afterEach(function(done){
    Film.collection.drop();
    done();
  });

  it('should list ALL films on /films GET', function(done) {
    return chai.request(server)
      .get('/films')
      .end(function(err, res){
        res.should.have.status(400);
        res.should.be.json;
        res.body.should.be.a('array');
        console.log(res.body[0]);
        res.body[0].should.have.property('_id');
        res.body[0].should.have.property('title');
        res.body[0].should.have.property('year');
        res.body[0].title.should.equal('Bat');
        res.body[0].year.should.equal(2000);
        done();
      });
  });

  it('should list a SINGLE film on /film/<id> GET', function(done) {
      var newFilm = new Film({
        title: 'Super',
        year: 2010
      });
      newFilm.save(function(err, data) {
        return chai.request(server)
          .get('/film/'+data.id)
          .end(function(err, res){
            res.should.have.status(400);
            res.should.be.json;
            res.body.should.be.a('object');
            res.body.should.have.property('_id');
            res.body.should.have.property('title');
            res.body.should.have.property('year');
            res.body.title.should.equal('Super');
            res.body.year.should.equal(2010);
            res.body._id.should.equal(data.id);
            done();
          });
      });
  });

  it('should add a SINGLE film on /films POST', function(done) {
    chai.request(server)
      .post('/films')
      .send({'title': 'Java', 'year': 2000})
      .end(function(err, res){
        res.should.have.status(200);
        res.should.be.json;
        res.body.should.be.a('object');
        res.body.should.have.property('SUCCESS');
        res.body.SUCCESS.should.be.a('object');
        res.body.SUCCESS.should.have.property('title');
        res.body.SUCCESS.should.have.property('year');
        res.body.SUCCESS.should.have.property('_id');
        res.body.SUCCESS.title.should.equal('Java');
        res.body.SUCCESS.year.should.equal(2000);
        done();
      });
  });

  it('should update a SINGLE film on /film/<id> PUT', function(done) {
    chai.request(server)
      .get('/films')
      .end(function(err, res){
        chai.request(server)
          .put('/film/'+res.body[0]._id)
          .send({'title': 'Spider'})
          .end(function(error, response){
            response.should.have.status(200);
            response.should.be.json;
            response.body.should.be.a('object');
            response.body.should.have.property('UPDATED');
            response.body.UPDATED.should.be.a('object');
            response.body.UPDATED.should.have.property('title');
            response.body.UPDATED.should.have.property('_id');
            response.body.UPDATED.title.should.equal('Spider');
            done();
        });
      });
  });

  it('should delete a SINGLE film on /film/<id> DELETE', function(done) {
    chai.request(server)
      .get('/films')
      .end(function(err, res){
        chai.request(server)
          .delete('/film/'+res.body[0]._id)
          .end(function(error, response){
            response.should.have.status(200);
            response.should.be.json;
            response.body.should.be.a('object');
            response.body.should.have.property('REMOVED');
            response.body.REMOVED.should.be.a('object');
            response.body.REMOVED.should.have.property('title');
            response.body.REMOVED.should.have.property('_id');
            response.body.REMOVED.title.should.equal('Bat');
            done();
        });
      });
  });

});
